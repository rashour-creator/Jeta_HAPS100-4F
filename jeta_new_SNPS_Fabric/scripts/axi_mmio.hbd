#******************************************************************************
#   $Id: //chipit/chipit/main/dev/systems/examples/xtor_riscv_soc/scripts/axi_mmio.hbd#2 $
#   $Author: khertig $
#   $DateTime: 2022/01/18 09:17:58 $
#****************************************************************************** 
# Create interface ports
set UART_MM [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 UART_MM ]
set_property -dict [ list \
   CONFIG.ADDR_WIDTH {32} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.CLK_DOMAIN {AXI_S} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.FREQ_HZ {20000000} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {1} \
   CONFIG.HAS_CACHE {1} \
   CONFIG.HAS_LOCK {1} \
   CONFIG.HAS_PROT {1} \
   CONFIG.HAS_QOS {1} \
   CONFIG.HAS_REGION {0} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {6} \
   CONFIG.MAX_BURST_LENGTH {256} \
   CONFIG.NUM_READ_OUTSTANDING {1} \
   CONFIG.NUM_READ_THREADS {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {1} \
   CONFIG.NUM_WRITE_THREADS {1} \
   CONFIG.PROTOCOL {AXI4} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW_BURST {1} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
   ] $UART_MM
set BRAM_CTRL [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 BRAM_CTRL ]
set_property -dict [ list \
   CONFIG.ADDR_WIDTH {32} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.CLK_DOMAIN {AXI_S} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.FREQ_HZ {20000000} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {1} \
   CONFIG.HAS_CACHE {1} \
   CONFIG.HAS_LOCK {1} \
   CONFIG.HAS_PROT {1} \
   CONFIG.HAS_QOS {1} \
   CONFIG.HAS_REGION {0} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {6} \
   CONFIG.MAX_BURST_LENGTH {256} \
   CONFIG.NUM_READ_OUTSTANDING {2} \
   CONFIG.NUM_READ_THREADS {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {2} \
   CONFIG.NUM_WRITE_THREADS {1} \
   CONFIG.PROTOCOL {AXI4} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW_BURST {1} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
   ] $BRAM_CTRL

# Create ports
set clk [ create_bd_port -dir I -type clk clk ]
set_property -dict [ list \
   CONFIG.ASSOCIATED_BUSIF {UART_MM:BRAM_CTRL} \
   CONFIG.ASSOCIATED_RESET {resetn} \
   CONFIG.CLK_DOMAIN {AXI_S} \
   CONFIG.FREQ_HZ {20000000} \
 ] $clk
set irq_uart0 [ create_bd_port -dir O -type intr irq_uart0 ]
set resetn [ create_bd_port -dir I -type rst resetn ]
set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_LOW} \
 ] $resetn
set rx [ create_bd_port -dir I rx ]
set tx [ create_bd_port -dir O tx ]

# Create instance: axi_bram_ctrl_0, and set properties
set axi_bram_ctrl_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_bram_ctrl axi_bram_ctrl_0 ]
set_property -dict [ list \
   CONFIG.C_SELECT_XPM {0} \
 ] $axi_bram_ctrl_0

# Create instance: axi_interconnect_mmio, and set properties
set axi_interconnect_mmio [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect axi_interconnect_mmio ]
set_property -dict [ list \
   CONFIG.NUM_MI {2} \
   CONFIG.NUM_SI {2} \
   CONFIG.SYNCHRONIZATION_STAGES {2} \
 ] $axi_interconnect_mmio

# Create instance: axi_uartlite_0, and set properties
set axi_uartlite_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_uartlite:2.0 axi_uartlite_0 ]
set_property -dict [ list \
   CONFIG.C_BAUDRATE {38400} \
   CONFIG.C_S_AXI_ACLK_FREQ_HZ {20000000} \
 ] $axi_uartlite_0

# Create instance: blk_mem_gen_0, and set properties
set blk_mem_gen_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 blk_mem_gen_0 ]
set_property -dict [ list \
   CONFIG.EN_SAFETY_CKT {false} \
   CONFIG.Enable_B {Use_ENB_Pin} \
   CONFIG.Memory_Type {True_Dual_Port_RAM} \
   CONFIG.Port_B_Clock {100} \
   CONFIG.Port_B_Enable_Rate {100} \
   CONFIG.Port_B_Write_Rate {50} \
   CONFIG.Use_RSTB_Pin {true} \
 ] $blk_mem_gen_0

# Create interface connections
connect_bd_intf_net -intf_net S00_AXI_1 [get_bd_intf_ports UART_MM] [get_bd_intf_pins axi_interconnect_mmio/S00_AXI]
connect_bd_intf_net -intf_net S01_AXI_1 [get_bd_intf_ports BRAM_CTRL] [get_bd_intf_pins axi_interconnect_mmio/S01_AXI]
connect_bd_intf_net -intf_net axi_bram_ctrl_0_BRAM_PORTA [get_bd_intf_pins axi_bram_ctrl_0/BRAM_PORTA] [get_bd_intf_pins blk_mem_gen_0/BRAM_PORTA]
connect_bd_intf_net -intf_net axi_bram_ctrl_0_BRAM_PORTB [get_bd_intf_pins axi_bram_ctrl_0/BRAM_PORTB] [get_bd_intf_pins blk_mem_gen_0/BRAM_PORTB]
connect_bd_intf_net -intf_net axi_interconnect_mmio_M00_AXI [get_bd_intf_pins axi_interconnect_mmio/M00_AXI] [get_bd_intf_pins axi_uartlite_0/S_AXI]
connect_bd_intf_net -intf_net axi_interconnect_mmio_M01_AXI [get_bd_intf_pins axi_bram_ctrl_0/S_AXI] [get_bd_intf_pins axi_interconnect_mmio/M01_AXI]

# Create port connections
connect_bd_net -net ARESETN_1 [get_bd_ports resetn] [get_bd_pins axi_bram_ctrl_0/s_axi_aresetn] [get_bd_pins axi_interconnect_mmio/ARESETN] [get_bd_pins axi_interconnect_mmio/M00_ARESETN] [get_bd_pins axi_interconnect_mmio/M01_ARESETN] [get_bd_pins axi_interconnect_mmio/S00_ARESETN] [get_bd_pins axi_interconnect_mmio/S01_ARESETN] [get_bd_pins axi_uartlite_0/s_axi_aresetn]
connect_bd_net -net axi_uartlite_0_interrupt [get_bd_ports irq_uart0] [get_bd_pins axi_uartlite_0/interrupt]
connect_bd_net -net axi_uartlite_0_tx [get_bd_ports tx] [get_bd_pins axi_uartlite_0/tx]
connect_bd_net -net clk_1 [get_bd_ports clk] [get_bd_pins axi_bram_ctrl_0/s_axi_aclk] [get_bd_pins axi_interconnect_mmio/ACLK] [get_bd_pins axi_interconnect_mmio/M00_ACLK] [get_bd_pins axi_interconnect_mmio/M01_ACLK] [get_bd_pins axi_interconnect_mmio/S00_ACLK] [get_bd_pins axi_interconnect_mmio/S01_ACLK] [get_bd_pins axi_uartlite_0/s_axi_aclk]
connect_bd_net -net rx_1 [get_bd_ports rx] [get_bd_pins axi_uartlite_0/rx]

# Create address segments
create_bd_addr_seg -range 0x00200000 -offset 0x61000000 [get_bd_addr_spaces BRAM_CTRL] [get_bd_addr_segs axi_bram_ctrl_0/S_AXI/Mem0] SEG_axi_bram_ctrl_0_Mem0
create_bd_addr_seg -range 0x00200000 -offset 0x61000000 [get_bd_addr_spaces UART_MM] [get_bd_addr_segs axi_bram_ctrl_0/S_AXI/Mem0] SEG_axi_bram_ctrl_0_Mem0
create_bd_addr_seg -range 0x00001000 -offset 0x60000000 [get_bd_addr_spaces BRAM_CTRL] [get_bd_addr_segs axi_uartlite_0/S_AXI/Reg] SEG_axi_uartlite_0_Reg
create_bd_addr_seg -range 0x00001000 -offset 0x60000000 [get_bd_addr_spaces UART_MM] [get_bd_addr_segs axi_uartlite_0/S_AXI/Reg] SEG_axi_uartlite_0_Reg
